openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FIRMANADISUSANTOO/firman/1.0.0
info:
  version: "1.0.0"
  title: home-iot-api
  description: The API for the EatBacon IOT project
tags:
  - name: user
paths:
  /users:
    post:
      tags:
        - user
      summary: "register user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              username: "Anto"
              HP: "0811111112"
              password: "ANTO"

      responses:
        "201":
          description: "sukses menambahkan data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
    get:
      tags:
        - user
      summary: "profile user"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "sukses mendapatkan data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "berhasil mendapatkan data"
                data:
                  id: 1
                  username: "Anto"
                  hp: "0811111112"
        "500":
          $ref: "#/components/responses/500"
    put:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: "update profile user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: "behasil mengubah data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "berhasil mengubah data"
                data:
                  id: 1
                  nama: "Andi"
                  hp: "0811111111"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /login:
    post:
      tags:
        - user
      summary: "login user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: hp
                password:
                  type: string
                  format: password

      responses:
        "200":
          description: "sukses login"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "berhasil login"
                data:
                  nama: "Andi"
                  email: "0811111111"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDk2NDg3MzQsImhwIjoiMDgxMTExMTExMSIsImlhdCI6MTcwOTYzNzkzNH0.y5O_H4JRsaCsuElq0xGwhBTdAPIkBKOsqU2Uhv6kvdo"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /todo:
    post:
      tags:
        - activity
      summary: Add
      description: "Endpoint yang digunakan untuk menambahkan activity sesuai dengan hak akses pada token JWT"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiResponse"
            example:
              kegiatan: "jogging"
              deskripsi: "Mempelajari dasar-dasar bahasa pemrograman Golang"
      responses:
        "201":
          description: "sukses menambahkan activity"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int8
                  message:
                    type: string
              example:
                code: 201
                message: "selamat data berhasil ditambahkan"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
 
    put:
      tags:
        - activity
      summary: Update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Activity"
      responses:
        "200":
          description: "berhasil mengubah data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataArrayResponse"
              example:
                code: 200
                message: "berhasil mengubah data"
                data:
                  id: 1
                  kegiatan: "membaca buku"
                  deskripsi: "Membaca buku tentang sejarah dunia"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - activity
      security: 
        - bearerAuth: []
      summary: "delete select activity"
      responses:
        '200':
          description: "success registered"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code: 200
                message: "success delete activity"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/500'
components:
  schemas:
    Activity:
      type: object
      properties:
        judul:
          type: string
        deskripsi:
          type: string
    User:
      type: object
      required:
        - username
        - hp
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: hp
        password:
          type: string
          format: password
          minLength: 8
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ApiDataResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        data:
          type: object
        message:
          type: string
    ApiDataArrayResponse:
      type: object
      properties:
        code:
          type: integer
          format: int8
        message:
          type: string
        data:
          type: array
          items:
            type: object
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  responses:
    "400":
      description: "input data kurang tepat"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            code: 400
            message: "terdapat kesalahan pada data input"
    "500":
      description: "server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT